name: 'health-checker-dev'
services:
  backend:
    container_name: backend
    build: ./back
    command: npm run dev
    env_file: .env
    volumes:
      - ./back/src:/app/src
    ports:
      - 3000:4000
    restart: always
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:3000/'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 5s
      timeout: 5s
      retries: 20

  frontend:
    container_name: frontend
    build: ./front
    command: npm run dev
    env_file: .env
    volumes:
      - ./front/src/:/app/src/
    ports:
      - 5173:5173
    restart: always
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100

  database:
    container_name: database
    image: postgres
    env_file: .env
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - ./data/database:/var/lib/postgresql/data

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      database:
        condition: service_healthy